[{"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\index.tsx":"1","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\App.tsx":"2","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\reportWebVitals.ts":"3","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Navbar.tsx":"4","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Store\\index.ts":"5","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Api\\Context\\AuthProvider.tsx":"6","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Login&Register\\Login.tsx":"7","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Login&Register\\Register.tsx":"8","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Api\\axios.jsx":"9","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\index.ts":"10","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\index.ts":"11","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Home.tsx":"12","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\User.ts":"13","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\User.ts":"14","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\products.ts":"15","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\products.ts":"16","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Product.tsx":"17"},{"size":600,"mtime":1689328118766,"results":"18","hashOfConfig":"19"},{"size":742,"mtime":1689758992469,"results":"20","hashOfConfig":"19"},{"size":425,"mtime":1689239620033,"results":"21","hashOfConfig":"19"},{"size":6902,"mtime":1689588040312,"results":"22","hashOfConfig":"19"},{"size":872,"mtime":1689753579341,"results":"23","hashOfConfig":"19"},{"size":341,"mtime":1689327704363,"results":"24","hashOfConfig":"19"},{"size":4241,"mtime":1689344535967,"results":"25","hashOfConfig":"19"},{"size":11538,"mtime":1689344574194,"results":"26","hashOfConfig":"19"},{"size":103,"mtime":1689327719509,"results":"27","hashOfConfig":"19"},{"size":773,"mtime":1689328218883,"results":"28","hashOfConfig":"19"},{"size":477,"mtime":1689328271496,"results":"29","hashOfConfig":"19"},{"size":2929,"mtime":1689758855805,"results":"30","hashOfConfig":"19"},{"size":767,"mtime":1689585597542,"results":"31","hashOfConfig":"19"},{"size":2161,"mtime":1689585604011,"results":"32","hashOfConfig":"19"},{"size":691,"mtime":1689753551867,"results":"33","hashOfConfig":"19"},{"size":985,"mtime":1689758744056,"results":"34","hashOfConfig":"19"},{"size":300,"mtime":1689759015162,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"134zxm2",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\App.tsx",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\reportWebVitals.ts",[],[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Navbar.tsx",["94","95","96","97","98","99","100","101","102","103","104"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { USER } from \"../Redux/ActionType\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../Redux/Store\";\r\nimport { motion } from \"framer-motion\";\r\nimport { USER_BY_USERNAME, userByUsername } from \"../Redux/ActionType/User\";\r\n\r\nconst Navbar = () => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [isCategoryOpen, setIsCategoryOpen] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\r\n\r\n  const User = useSelector((state: RootState) => state?.User.user);\r\n  const user = useSelector((state: RootState) => state?.user);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  useEffect(() => {\r\n    (async () => {\r\n      let data = await userByUsername(\r\n        user.user.username,\r\n        user.user.accessToken\r\n      );\r\n      dispatch({\r\n        type: USER_BY_USERNAME,\r\n        payload: data,\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: USER,\r\n      payload: {},\r\n    });\r\n    navigate(\"/Login\");\r\n  };\r\n\r\n  const categories = [\r\n    \"ELECTRONICS\",\r\n    \"CLOTHING\",\r\n    \"BOOKS\",\r\n    \"SPORT\",\r\n    \"TOYS\",\r\n    \"FOOD\",\r\n    \"MERCHANDISING\",\r\n  ];\r\n\r\n  const handleCategorySelect = (category: string) => {\r\n    setSelectedCategory(category);\r\n    setIsCategoryOpen(false);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-white border-gray-200 dark:bg-gray-900\">\r\n      <div className=\"max-w-screen-xl flex items-center justify-between mx-auto p-3\">\r\n        <a href=\"https://flowbite.com/\" className=\"flex items-center\">\r\n          <img\r\n            src=\"https://flowbite.com/docs/images/logo.svg\"\r\n            className=\"h-8 mr-3\"\r\n            alt=\"Flowbite Logo\"\r\n          />\r\n          <span className=\"hidden ss:block self-center text-2xl font-semibold whitespace-nowrap dark:text-white\">\r\n            Bebozon\r\n          </span>\r\n        </a>\r\n\r\n        <div className=\"relative  flex w-3/6\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            className=\"w-full px-4 py-2 text-sm bg-gray-100  focus:outline-none focus:ring-2 focus:ring-gray-300\"\r\n          />\r\n          <svg\r\n            className=\"absolute w-5 h-5 top-3 right-3 text-gray-500\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M15 15l5.5 5.5M10 18a8 8 0 100-16 8 8 0 000 16z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        {user?.user && user?.user.username ? (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              className=\"flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600\"\r\n              id=\"user-menu-button\"\r\n              aria-expanded={isDropdownOpen ? \"true\" : \"false\"}\r\n              onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n            >\r\n              <span className=\"sr-only\">Open user menu</span>\r\n              <img\r\n                className=\"w-8 h-8 rounded-full\"\r\n                src={User?.image}\r\n                alt=\"user photo\"\r\n              />\r\n            </button>\r\n\r\n            {isDropdownOpen && (\r\n              <motion.div\r\n                className=\"z-50 absolute right-0 top-16 xs:w-3/4 sm:w-1/5 mr-5 mt-2 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600\"\r\n                id=\"user-dropdown\"\r\n                initial=\"hidden\"\r\n                whileInView=\"visible\"\r\n                transition={{ duration: 0.5 }}\r\n                variants={{\r\n                  hidden: { opacity: 0, y: 50 },\r\n                  visible: { opacity: 1, y: 0 },\r\n                }}\r\n              >\r\n                <div className=\"px-4 py-3\">\r\n                  <span className=\"block text-sm text-gray-900 dark:text-white\">\r\n                    {User.name}\r\n                  </span>\r\n                  <span className=\"block text-sm text-gray-500 truncate dark:text-gray-400\">\r\n                    {User.email}\r\n                  </span>\r\n                </div>\r\n                <ul className=\"py-2\" aria-labelledby=\"user-menu-button\">\r\n                  <li>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                    >\r\n                      Dashboard\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                    >\r\n                      Settings\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                    >\r\n                      Earnings\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      onClick={(e) => {\r\n                        handleSubmit(e);\r\n                      }}\r\n                      href=\"#\"\r\n                      className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                    >\r\n                      Sign out\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </motion.div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div>\r\n            <Link to={\"/login\"} className=\"me-3\">\r\n              <span>\r\n                {\" \"}\r\n                <strong>Accedi</strong>\r\n              </span>\r\n            </Link>\r\n            <Link to={\"/register\"}>\r\n              <span>\r\n                {\" \"}\r\n                <strong>Registrati</strong>\r\n              </span>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\nfunction dispatch(arg0: { type: any; payload: {} }) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n",[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Store\\index.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Api\\Context\\AuthProvider.tsx",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Login&Register\\Login.tsx",["105"],[],"import { useRef, useState, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AuthContext from \"../Api/Context/AuthProvider\";\r\nimport axios from \"../Api/axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { USER } from \"../../Redux/ActionType\";\r\nconst LOGIN_URL = \"/api/auth/login\";\r\n\r\nconst Login = () => {\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  const { setAuth }: any = useContext(AuthContext);\r\n  const userRef = useRef<HTMLInputElement>(null);\r\n  const errRef = useRef<HTMLInputElement>(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  useEffect(() => {\r\n    userRef.current?.focus();\r\n  }, []);\r\n  useEffect(() => {\r\n    setErrMsg(\"\");\r\n  }, [user, pwd]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      navigate(\"/\");\r\n      setSuccess(false);\r\n    }\r\n  }, [success]);\r\n\r\n  // Spedizione dati\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        LOGIN_URL,\r\n        JSON.stringify({ username: user, password: pwd }),\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n      const id = response?.data?.id;\r\n      const accessToken = response?.data?.accessToken;\r\n      const roles = response?.data?.roles;\r\n      setAuth({ id, user, pwd, roles, accessToken });\r\n      dispatch({\r\n        type: USER,\r\n        payload: { id, username: user, accessToken, roles },\r\n      });\r\n      setUser(\"\");\r\n      setPwd(\"\");\r\n      setSuccess(true);\r\n    } catch (error: any) {\r\n      setErrMsg(error?.response?.data.message);\r\n      errRef.current?.focus();\r\n    }\r\n  };\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  return (\r\n    <div className=\"myRegister\">\r\n      {success ? (\r\n        <section>\r\n          <h1 className=\"text-3xl my-4 font-bold\">You are logged in!</h1>\r\n          <br />\r\n          <p>\r\n            <Link to={\"/\"} className=\"text-blue-700\">\r\n              Go to Home\r\n            </Link>\r\n          </p>\r\n        </section>\r\n      ) : (\r\n        <section>\r\n          <p\r\n            ref={errRef}\r\n            className={errMsg ? \"errmsg\" : \"offscreen\"}\r\n            aria-live=\"assertive\"\r\n          >\r\n            {errMsg}\r\n          </p>\r\n          <h1 className=\"text-3xl my-4 font-bold\">Sign In</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"username\"></label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              ref={userRef}\r\n              placeholder=\"Username\"\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setUser(e.target.value)}\r\n              value={user}\r\n              required\r\n            />\r\n            <label htmlFor=\"password\"></label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n              placeholder=\"Password\"\r\n              required\r\n            />{\" \"}\r\n            <br />\r\n            <button\r\n              className={user && pwd ? \"formButtonsOk\" : \"formButtons\"}\r\n              disabled={!user || !pwd ? true : false}\r\n            >\r\n              Sign In\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Need an Account?\r\n            <br />\r\n            <span className=\"line\">\r\n              <Link to={\"/register\"} className=\"text-blue-700\">\r\n                Sign Up\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Login&Register\\Register.tsx",["106"],[],"import { useRef, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  faCheck,\r\n  faTimes,\r\n  faInfoCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"../Api/axios\";\r\n\r\nconst NAME_REGEX = /^(?=.*\\s)\\S+\\s\\S+.*$/;\r\nconst USERNAME_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst EMAIL_REGEX = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\nconst PASSWORD_REGEX =\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = \"/api/auth/register\";\r\n\r\nconst Register = () => {\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  const userRef = useRef<HTMLInputElement>(null);\r\n  const errRef = useRef<HTMLParagraphElement>(null);\r\n\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [validNameSurname, setValidNameSurname] = useState<boolean>(false);\r\n\r\n  const [user, setUser] = useState<string>(\"\");\r\n  const [validName, setValidName] = useState<boolean>(false);\r\n  const [userFocus, setUserFocus] = useState<boolean>(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [emailFocus, setEmailFocus] = useState(false);\r\n\r\n  const [pwd, setPwd] = useState<string>(\"\");\r\n  const [validPwd, setValidPwd] = useState<boolean>(false);\r\n  const [pwdFocus, setPwdFocus] = useState<boolean>(false);\r\n\r\n  const [matchPwd, setMatchPwd] = useState<string>(\"\");\r\n  const [validMatch, setValidMatch] = useState<boolean>(false);\r\n  const [matchFocus, setMatchFocus] = useState<boolean>(false);\r\n\r\n  const [errMsg, setErrMsg] = useState<string>(\"\");\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  useEffect(() => {\r\n    if (userRef.current) {\r\n      userRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setValidNameSurname(NAME_REGEX.test(name));\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    setValidName(USERNAME_REGEX.test(user));\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    setValidEmail(EMAIL_REGEX.test(email));\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    setValidPwd(PASSWORD_REGEX.test(pwd));\r\n    setValidMatch(pwd === matchPwd);\r\n  }, [pwd, matchPwd]);\r\n\r\n  useEffect(() => {\r\n    setErrMsg(\"\");\r\n  }, [user, pwd, matchPwd]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    // if button enabled with JS hack\r\n    const isUserValid = USERNAME_REGEX.test(user);\r\n    const isPwdValid = PASSWORD_REGEX.test(pwd);\r\n    if (!isUserValid || !isPwdValid) {\r\n      setErrMsg(\"Invalid Entry\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(\r\n        REGISTER_URL,\r\n        JSON.stringify({\r\n          name,\r\n          username: user,\r\n          email,\r\n          password: pwd,\r\n        }),\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      console.log(response?.data);\r\n      console.log(JSON.stringify(response));\r\n      setSuccess(true);\r\n      //clear state and controlled inputs\r\n      //need value attrib on inputs for this\r\n      setName(\"\");\r\n      setUser(\"\");\r\n      setEmail(\"\");\r\n      setPwd(\"\");\r\n      setMatchPwd(\"\");\r\n    } catch (err: any) {\r\n      if (!err?.response) {\r\n        setErrMsg(\"No Server Response\");\r\n      } else if (err.response?.status === 409) {\r\n        setErrMsg(\"Username Taken\");\r\n      } else {\r\n        setErrMsg(\"Registration Failed\");\r\n      }\r\n      if (errRef.current) {\r\n        errRef.current.focus();\r\n      }\r\n    }\r\n  };\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  return (\r\n    <div className=\"myRegister pb-3\">\r\n      {success ? (\r\n        <section>\r\n          <h1 className=\"text-3xl my-4 font-bold\">Success!</h1>\r\n          <p>\r\n            <Link to={\"/login\"} className=\"text-blue-700\">\r\n              Sign In\r\n            </Link>\r\n          </p>\r\n        </section>\r\n      ) : (\r\n        <section>\r\n          <p\r\n            ref={errRef}\r\n            className={errMsg ? \"errmsg\" : \"offscreen\"}\r\n            aria-live=\"assertive\"\r\n          >\r\n            {errMsg}\r\n          </p>\r\n          <h2 className=\"text-3xl my-4 font-bold\">Register</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Name & Surname\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n              required\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n            <label htmlFor=\"name\">\r\n              {\" \"}\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validNameSurname ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validNameSurname || !name ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setUser(e.target.value)}\r\n              value={user}\r\n              placeholder=\"Username\"\r\n              required\r\n              aria-invalid={validName ? \"false\" : \"true\"}\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n            <label htmlFor=\"username\">\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validName ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validName || !user ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <p\r\n              id=\"uidnote\"\r\n              className={\r\n                userFocus && user && !validName ? \"instructions\" : \"offscreen\"\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              4 to 24 characters.\r\n              <br />\r\n              Must begin with a letter.\r\n              <br />\r\n              Letters, numbers, underscores, hyphens allowed.\r\n            </p>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              placeholder=\"Email\"\r\n              required\r\n              aria-invalid={validEmail ? \"false\" : \"true\"}\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setEmailFocus(true)}\r\n              onBlur={() => setEmailFocus(false)}\r\n            />{\" \"}\r\n            <label htmlFor=\"email\">\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validEmail ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validEmail || !email ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <p\r\n              id=\"eidnote\"\r\n              className={\r\n                emailFocus && email && !validEmail\r\n                  ? \"instructions\"\r\n                  : \"offscreen\"\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              4 to 24 characters.\r\n              <br />\r\n              Must Contain @\r\n              <br />\r\n              Letters, numbers, underscores, hyphens allowed.\r\n            </p>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n              placeholder=\"Password\"\r\n              required\r\n              aria-invalid={validPwd ? \"false\" : \"true\"}\r\n              aria-describedby=\"pwdnote\"\r\n              onFocus={() => setPwdFocus(true)}\r\n              onBlur={() => setPwdFocus(false)}\r\n            />{\" \"}\r\n            <label htmlFor=\"password\">\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validPwd ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validPwd || !pwd ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <p\r\n              id=\"pwdnote\"\r\n              className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              8 to 24 characters.\r\n              <br />\r\n              Must include uppercase and lowercase letters, a number and a\r\n              special character.\r\n              <br />\r\n              Allowed special characters:{\" \"}\r\n              <span aria-label=\"exclamation mark\">!</span>{\" \"}\r\n              <span aria-label=\"at symbol\">@</span>{\" \"}\r\n              <span aria-label=\"hashtag\">#</span>{\" \"}\r\n              <span aria-label=\"dollar sign\">$</span>{\" \"}\r\n              <span aria-label=\"percent\">%</span>\r\n            </p>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm_pwd\"\r\n              onChange={(e) => setMatchPwd(e.target.value)}\r\n              value={matchPwd}\r\n              placeholder=\" Confirm Password\"\r\n              required\r\n              aria-invalid={validMatch ? \"false\" : \"true\"}\r\n              aria-describedby=\"confirmnote\"\r\n              onFocus={() => setMatchFocus(true)}\r\n              onBlur={() => setMatchFocus(false)}\r\n            />\r\n            <label htmlFor=\"confirm_pwd\">\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validMatch && matchPwd ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <p\r\n              id=\"confirmnote\"\r\n              className={\r\n                matchFocus && !validMatch ? \"instructions\" : \"offscreen\"\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              Must match the first password input field.\r\n            </p>\r\n            <br />\r\n            <button\r\n              className={\r\n                validName && validPwd && validMatch\r\n                  ? \"formButtonsOk\"\r\n                  : \"formButtons\"\r\n              }\r\n              disabled={!validName || !validPwd || !validMatch ? true : false}\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already registered?\r\n            <br />\r\n            <span className=\"line\">\r\n              <Link to={\"/login\"} className=\"text-blue-700\">\r\n                Sign In\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Api\\axios.jsx",[],[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\index.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\index.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Home.tsx",["107","108","109","110","111"],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\User.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\User.ts",["112","113"],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\products.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\products.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Product.tsx",["114","115"],[],{"ruleId":"116","severity":1,"message":"117","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":24},{"ruleId":"116","severity":1,"message":"120","line":12,"column":10,"nodeType":"118","messageId":"119","endLine":12,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":32,"column":6,"nodeType":"123","endLine":32,"endColumn":8,"suggestions":"124"},{"ruleId":"116","severity":1,"message":"125","line":43,"column":9,"nodeType":"118","messageId":"119","endLine":43,"endColumn":19},{"ruleId":"116","severity":1,"message":"126","line":53,"column":9,"nodeType":"118","messageId":"119","endLine":53,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":103,"column":15,"nodeType":"129","endLine":107,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":132,"column":21,"nodeType":"129","endLine":135,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":140,"column":21,"nodeType":"129","endLine":143,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":148,"column":21,"nodeType":"129","endLine":151,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":156,"column":21,"nodeType":"129","endLine":162,"endColumn":22},{"ruleId":"116","severity":1,"message":"132","line":192,"column":10,"nodeType":"118","messageId":"119","endLine":192,"endColumn":18},{"ruleId":"121","severity":1,"message":"133","line":36,"column":6,"nodeType":"123","endLine":36,"endColumn":15,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":13,"column":27,"nodeType":"137","messageId":"138","endLine":13,"endColumn":28,"suggestions":"139"},{"ruleId":"116","severity":1,"message":"140","line":1,"column":21,"nodeType":"118","messageId":"119","endLine":1,"endColumn":29},{"ruleId":"116","severity":1,"message":"141","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":18},{"ruleId":"121","severity":1,"message":"142","line":36,"column":6,"nodeType":"123","endLine":36,"endColumn":8,"suggestions":"143"},{"ruleId":"127","severity":1,"message":"128","line":52,"column":15,"nodeType":"129","endLine":56,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":74,"column":17,"nodeType":"129","endLine":77,"endColumn":18},{"ruleId":"116","severity":1,"message":"144","line":69,"column":9,"nodeType":"118","messageId":"119","endLine":69,"endColumn":23},{"ruleId":"116","severity":1,"message":"145","line":78,"column":10,"nodeType":"118","messageId":"119","endLine":78,"endColumn":19},{"ruleId":"116","severity":1,"message":"146","line":5,"column":9,"nodeType":"118","messageId":"119","endLine":5,"endColumn":17},{"ruleId":"116","severity":1,"message":"147","line":6,"column":9,"nodeType":"118","messageId":"119","endLine":6,"endColumn":16},"@typescript-eslint/no-unused-vars","'isCategoryOpen' is assigned a value but never used.","Identifier","unusedVar","'selectedCategory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'user.user.accessToken', and 'user.user.username'. Either include them or remove the dependency array.","ArrayExpression",["148"],"'categories' is assigned a value but never used.","'handleCategorySelect' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'dispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["149"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["150","151"],"'useState' is defined but never used.","'products' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user.accessToken'. Either include them or remove the dependency array.",["152"],"'requestOptions' is assigned a value but never used.","'RootState' is defined but never used.","'dispatch' is assigned a value but never used.","'product' is assigned a value but never used.",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"160","fix":"161","desc":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [dispatch, user.user.accessToken, user.user.username]",{"range":"165","text":"166"},"Update the dependencies array to be: [navigate, success]",{"range":"167","text":"168"},"removeEscape",{"range":"169","text":"170"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"171","text":"172"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [dispatch, user.accessToken]",{"range":"173","text":"174"},[1334,1336],"[dispatch, user.user.accessToken, user.user.username]",[1421,1430],"[navigate, success]",[417,418],"",[417,417],"\\",[961,963],"[dispatch, user.accessToken]"]
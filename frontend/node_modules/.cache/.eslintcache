[{"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\index.tsx":"1","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\App.tsx":"2","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\reportWebVitals.ts":"3","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Navbar.tsx":"4","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Store\\index.ts":"5","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Api\\Context\\AuthProvider.tsx":"6","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Login&Register\\Login.tsx":"7","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Login&Register\\Register.tsx":"8","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Api\\axios.jsx":"9","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\index.ts":"10","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\index.ts":"11","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Home.tsx":"12","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\User.ts":"13","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\User.ts":"14","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\products.ts":"15","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\products.ts":"16","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Products\\Product.tsx":"17","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Products\\Products.tsx":"18","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Error\\Error.tsx":"19","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Profile\\Dashboard.tsx":"20","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Profile\\Addresses.tsx":"21","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Profile\\NewAddress.tsx":"22"},{"size":621,"mtime":1689845098489,"results":"23","hashOfConfig":"24"},{"size":1257,"mtime":1690793712307,"results":"25","hashOfConfig":"24"},{"size":425,"mtime":1689239620033,"results":"26","hashOfConfig":"24"},{"size":7655,"mtime":1690791730104,"results":"27","hashOfConfig":"24"},{"size":872,"mtime":1689845098465,"results":"28","hashOfConfig":"24"},{"size":341,"mtime":1689845098471,"results":"29","hashOfConfig":"24"},{"size":4241,"mtime":1689845098478,"results":"30","hashOfConfig":"24"},{"size":11538,"mtime":1689845098480,"results":"31","hashOfConfig":"24"},{"size":103,"mtime":1689845098473,"results":"32","hashOfConfig":"24"},{"size":773,"mtime":1689845098451,"results":"33","hashOfConfig":"24"},{"size":477,"mtime":1689845098461,"results":"34","hashOfConfig":"24"},{"size":5371,"mtime":1690447335116,"results":"35","hashOfConfig":"24"},{"size":767,"mtime":1689845098459,"results":"36","hashOfConfig":"24"},{"size":2161,"mtime":1690012009815,"results":"37","hashOfConfig":"24"},{"size":851,"mtime":1690447124785,"results":"38","hashOfConfig":"24"},{"size":2139,"mtime":1690105266762,"results":"39","hashOfConfig":"24"},{"size":7575,"mtime":1690791106685,"results":"40","hashOfConfig":"24"},{"size":3222,"mtime":1690103769931,"results":"41","hashOfConfig":"24"},{"size":421,"mtime":1690271962556,"results":"42","hashOfConfig":"24"},{"size":2015,"mtime":1690792701599,"results":"43","hashOfConfig":"24"},{"size":618,"mtime":1690793295753,"results":"44","hashOfConfig":"24"},{"size":3033,"mtime":1690796606977,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"134zxm2",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"49"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"49"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\App.tsx",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\reportWebVitals.ts",[],[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Navbar.tsx",["122","123","124","125","126","127","128","129"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { USER } from \"../Redux/ActionType\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../Redux/Store\";\r\nimport { motion } from \"framer-motion\";\r\nimport { USER_BY_USERNAME, userByUsername } from \"../Redux/ActionType/User\";\r\nimport carrello from \"../icons8-fast-cart-64.png\";\r\nimport { ALL_PRODUCTS, productByName } from \"../Redux/ActionType/products\";\r\n\r\nconst Navbar = () => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const User = useSelector((state: RootState) => state?.User?.user);\r\n  const user = useSelector((state: RootState) => state?.user.user);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  const handleSearch = (e: any) => {\r\n    e.preventDefault();\r\n    setSearch(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleSearchSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    let data = await productByName(search, user.accessToken);\r\n    dispatch({\r\n      type: ALL_PRODUCTS,\r\n      payload: data,\r\n    });\r\n    navigate(\"/Products\");\r\n    console.log(\"enter\");\r\n  };\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: USER,\r\n      payload: {},\r\n    });\r\n    navigate(\"/Login\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-blue-950 border-gray-200 dark:bg-gray-900 text-white\">\r\n      <div className=\"max-w-screen-xl flex items-center justify-between mx-auto p-3\">\r\n        <Link className=\"flex items-center\" to={\"/\"}>\r\n          <img\r\n            src=\"https://flowbite.com/docs/images/logo.svg\"\r\n            className=\"h-8 mr-3\"\r\n            alt=\"Flowbite Logo\"\r\n          />\r\n          <span className=\"hidden ss:block self-center text-2xl font-semibold whitespace-nowrap dark:text-white\">\r\n            Bebozon\r\n          </span>\r\n        </Link>\r\n\r\n        <div className=\"relative  flex w-3/6\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            className=\"w-full px-4 py-2 text-sm bg-gray-100 text-black focus:outline-none focus:ring-2 focus:ring-gray-300\"\r\n            onChange={(e) => {\r\n              handleSearch(e);\r\n            }}\r\n            onKeyUp={(e) => {\r\n              if (e.key === \"Enter\" || e.keyCode === 13) {\r\n                handleSearchSubmit(e);\r\n              }\r\n            }}\r\n          />\r\n          <svg\r\n            className=\"absolute w-5 h-5 top-3 right-3 text-gray-500\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M15 15l5.5 5.5M10 18a8 8 0 100-16 8 8 0 000 16z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n\r\n        {user && user?.username ? (\r\n          <>\r\n            <div className=\"flex items-center justify-between \">\r\n              <div className=\"flex items-center font-serif font-medium mr-8\">\r\n                Carrello{\" \"}\r\n                <img\r\n                  src={carrello}\r\n                  alt=\"carrello\"\r\n                  className=\"h-10 ml-3 text-white\"\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"button\"\r\n                className=\"flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600\"\r\n                id=\"user-menu-button\"\r\n                aria-expanded={isDropdownOpen ? \"true\" : \"false\"}\r\n                onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n              >\r\n                {\" \"}\r\n                <span className=\"sr-only\">Open user menu</span>\r\n                <img\r\n                  className=\"w-8 h-8 rounded-full\"\r\n                  src={User?.image}\r\n                  alt=\"user photo\"\r\n                />\r\n              </button>\r\n              {isDropdownOpen && (\r\n                <motion.div\r\n                  className=\"z-50 absolute right-0 top-16 xs:w-3/4 sm:w-1/5 mr-5 mt-2 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600\"\r\n                  id=\"user-dropdown\"\r\n                  initial=\"hidden\"\r\n                  whileInView=\"visible\"\r\n                  transition={{ duration: 0.5 }}\r\n                  variants={{\r\n                    hidden: { opacity: 0, y: 50 },\r\n                    visible: { opacity: 1, y: 0 },\r\n                  }}\r\n                >\r\n                  <div className=\"px-4 py-3\">\r\n                    <span className=\"block text-sm text-gray-900 dark:text-white\">\r\n                      {User.name}\r\n                    </span>\r\n                    <span className=\"block text-sm text-gray-500 truncate dark:text-gray-400\">\r\n                      {User.email}\r\n                    </span>\r\n                  </div>\r\n                  <ul className=\"py-2\" aria-labelledby=\"user-menu-button\">\r\n                    <li>\r\n                      <Link\r\n                        to={\"/Dashboard\"}\r\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                      >\r\n                        Dashboard\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                      >\r\n                        Settings\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                      >\r\n                        Earnings\r\n                      </a>\r\n                    </li>\r\n                    <hr />\r\n                    <li>\r\n                      <a\r\n                        onClick={(e) => {\r\n                          handleSubmit(e);\r\n                        }}\r\n                        href=\"#\"\r\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white\"\r\n                      >\r\n                        Sign out\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </motion.div>\r\n              )}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div>\r\n            <Link to={\"/login\"} className=\"me-3\">\r\n              <span>\r\n                {\" \"}\r\n                <strong>Accedi</strong>\r\n              </span>\r\n            </Link>\r\n            <Link to={\"/register\"}>\r\n              <span>\r\n                {\" \"}\r\n                <strong>Registrati</strong>\r\n              </span>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\nfunction dispatch(arg0: { type: any; payload: {} }) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Store\\index.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Api\\Context\\AuthProvider.tsx",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Login&Register\\Login.tsx",["130"],[],"import { useRef, useState, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AuthContext from \"../Api/Context/AuthProvider\";\r\nimport axios from \"../Api/axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { USER } from \"../../Redux/ActionType\";\r\nconst LOGIN_URL = \"/api/auth/login\";\r\n\r\nconst Login = () => {\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  const { setAuth }: any = useContext(AuthContext);\r\n  const userRef = useRef<HTMLInputElement>(null);\r\n  const errRef = useRef<HTMLInputElement>(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  useEffect(() => {\r\n    userRef.current?.focus();\r\n  }, []);\r\n  useEffect(() => {\r\n    setErrMsg(\"\");\r\n  }, [user, pwd]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      navigate(\"/\");\r\n      setSuccess(false);\r\n    }\r\n  }, [success]);\r\n\r\n  // Spedizione dati\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        LOGIN_URL,\r\n        JSON.stringify({ username: user, password: pwd }),\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n      const id = response?.data?.id;\r\n      const accessToken = response?.data?.accessToken;\r\n      const roles = response?.data?.roles;\r\n      setAuth({ id, user, pwd, roles, accessToken });\r\n      dispatch({\r\n        type: USER,\r\n        payload: { id, username: user, accessToken, roles },\r\n      });\r\n      setUser(\"\");\r\n      setPwd(\"\");\r\n      setSuccess(true);\r\n    } catch (error: any) {\r\n      setErrMsg(error?.response?.data.message);\r\n      errRef.current?.focus();\r\n    }\r\n  };\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  return (\r\n    <div className=\"myRegister\">\r\n      {success ? (\r\n        <section>\r\n          <h1 className=\"text-3xl my-4 font-bold\">You are logged in!</h1>\r\n          <br />\r\n          <p>\r\n            <Link to={\"/\"} className=\"text-blue-700\">\r\n              Go to Home\r\n            </Link>\r\n          </p>\r\n        </section>\r\n      ) : (\r\n        <section>\r\n          <p\r\n            ref={errRef}\r\n            className={errMsg ? \"errmsg\" : \"offscreen\"}\r\n            aria-live=\"assertive\"\r\n          >\r\n            {errMsg}\r\n          </p>\r\n          <h1 className=\"text-3xl my-4 font-bold\">Sign In</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"username\"></label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              ref={userRef}\r\n              placeholder=\"Username\"\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setUser(e.target.value)}\r\n              value={user}\r\n              required\r\n            />\r\n            <label htmlFor=\"password\"></label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n              placeholder=\"Password\"\r\n              required\r\n            />{\" \"}\r\n            <br />\r\n            <button\r\n              className={user && pwd ? \"formButtonsOk\" : \"formButtons\"}\r\n              disabled={!user || !pwd ? true : false}\r\n            >\r\n              Sign In\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Need an Account?\r\n            <br />\r\n            <span className=\"line\">\r\n              <Link to={\"/register\"} className=\"text-blue-700\">\r\n                Sign Up\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Login&Register\\Register.tsx",["131"],[],"import { useRef, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  faCheck,\r\n  faTimes,\r\n  faInfoCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"../Api/axios\";\r\n\r\nconst NAME_REGEX = /^(?=.*\\s)\\S+\\s\\S+.*$/;\r\nconst USERNAME_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst EMAIL_REGEX = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\nconst PASSWORD_REGEX =\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = \"/api/auth/register\";\r\n\r\nconst Register = () => {\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n  const userRef = useRef<HTMLInputElement>(null);\r\n  const errRef = useRef<HTMLParagraphElement>(null);\r\n\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [validNameSurname, setValidNameSurname] = useState<boolean>(false);\r\n\r\n  const [user, setUser] = useState<string>(\"\");\r\n  const [validName, setValidName] = useState<boolean>(false);\r\n  const [userFocus, setUserFocus] = useState<boolean>(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [emailFocus, setEmailFocus] = useState(false);\r\n\r\n  const [pwd, setPwd] = useState<string>(\"\");\r\n  const [validPwd, setValidPwd] = useState<boolean>(false);\r\n  const [pwdFocus, setPwdFocus] = useState<boolean>(false);\r\n\r\n  const [matchPwd, setMatchPwd] = useState<string>(\"\");\r\n  const [validMatch, setValidMatch] = useState<boolean>(false);\r\n  const [matchFocus, setMatchFocus] = useState<boolean>(false);\r\n\r\n  const [errMsg, setErrMsg] = useState<string>(\"\");\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< USE_NAVIGATE, USE_SELECTORE, USE_STATE, USE_DISPATCH >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  useEffect(() => {\r\n    if (userRef.current) {\r\n      userRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setValidNameSurname(NAME_REGEX.test(name));\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    setValidName(USERNAME_REGEX.test(user));\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    setValidEmail(EMAIL_REGEX.test(email));\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    setValidPwd(PASSWORD_REGEX.test(pwd));\r\n    setValidMatch(pwd === matchPwd);\r\n  }, [pwd, matchPwd]);\r\n\r\n  useEffect(() => {\r\n    setErrMsg(\"\");\r\n  }, [user, pwd, matchPwd]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    // if button enabled with JS hack\r\n    const isUserValid = USERNAME_REGEX.test(user);\r\n    const isPwdValid = PASSWORD_REGEX.test(pwd);\r\n    if (!isUserValid || !isPwdValid) {\r\n      setErrMsg(\"Invalid Entry\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(\r\n        REGISTER_URL,\r\n        JSON.stringify({\r\n          name,\r\n          username: user,\r\n          email,\r\n          password: pwd,\r\n        }),\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      console.log(response?.data);\r\n      console.log(JSON.stringify(response));\r\n      setSuccess(true);\r\n      //clear state and controlled inputs\r\n      //need value attrib on inputs for this\r\n      setName(\"\");\r\n      setUser(\"\");\r\n      setEmail(\"\");\r\n      setPwd(\"\");\r\n      setMatchPwd(\"\");\r\n    } catch (err: any) {\r\n      if (!err?.response) {\r\n        setErrMsg(\"No Server Response\");\r\n      } else if (err.response?.status === 409) {\r\n        setErrMsg(\"Username Taken\");\r\n      } else {\r\n        setErrMsg(\"Registration Failed\");\r\n      }\r\n      if (errRef.current) {\r\n        errRef.current.focus();\r\n      }\r\n    }\r\n  };\r\n  // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< FUNZIONI DEL COMPONENTE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n  return (\r\n    <div className=\"myRegister pb-3\">\r\n      {success ? (\r\n        <section>\r\n          <h1 className=\"text-3xl my-4 font-bold\">Success!</h1>\r\n          <p>\r\n            <Link to={\"/login\"} className=\"text-blue-700\">\r\n              Sign In\r\n            </Link>\r\n          </p>\r\n        </section>\r\n      ) : (\r\n        <section>\r\n          <p\r\n            ref={errRef}\r\n            className={errMsg ? \"errmsg\" : \"offscreen\"}\r\n            aria-live=\"assertive\"\r\n          >\r\n            {errMsg}\r\n          </p>\r\n          <h2 className=\"text-3xl my-4 font-bold\">Register</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Name & Surname\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n              required\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n            <label htmlFor=\"name\">\r\n              {\" \"}\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validNameSurname ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validNameSurname || !name ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setUser(e.target.value)}\r\n              value={user}\r\n              placeholder=\"Username\"\r\n              required\r\n              aria-invalid={validName ? \"false\" : \"true\"}\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setUserFocus(true)}\r\n              onBlur={() => setUserFocus(false)}\r\n            />\r\n            <label htmlFor=\"username\">\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validName ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validName || !user ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <p\r\n              id=\"uidnote\"\r\n              className={\r\n                userFocus && user && !validName ? \"instructions\" : \"offscreen\"\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              4 to 24 characters.\r\n              <br />\r\n              Must begin with a letter.\r\n              <br />\r\n              Letters, numbers, underscores, hyphens allowed.\r\n            </p>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              placeholder=\"Email\"\r\n              required\r\n              aria-invalid={validEmail ? \"false\" : \"true\"}\r\n              aria-describedby=\"uidnote\"\r\n              onFocus={() => setEmailFocus(true)}\r\n              onBlur={() => setEmailFocus(false)}\r\n            />{\" \"}\r\n            <label htmlFor=\"email\">\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validEmail ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validEmail || !email ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <p\r\n              id=\"eidnote\"\r\n              className={\r\n                emailFocus && email && !validEmail\r\n                  ? \"instructions\"\r\n                  : \"offscreen\"\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              4 to 24 characters.\r\n              <br />\r\n              Must Contain @\r\n              <br />\r\n              Letters, numbers, underscores, hyphens allowed.\r\n            </p>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={pwd}\r\n              placeholder=\"Password\"\r\n              required\r\n              aria-invalid={validPwd ? \"false\" : \"true\"}\r\n              aria-describedby=\"pwdnote\"\r\n              onFocus={() => setPwdFocus(true)}\r\n              onBlur={() => setPwdFocus(false)}\r\n            />{\" \"}\r\n            <label htmlFor=\"password\">\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validPwd ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validPwd || !pwd ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <p\r\n              id=\"pwdnote\"\r\n              className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              8 to 24 characters.\r\n              <br />\r\n              Must include uppercase and lowercase letters, a number and a\r\n              special character.\r\n              <br />\r\n              Allowed special characters:{\" \"}\r\n              <span aria-label=\"exclamation mark\">!</span>{\" \"}\r\n              <span aria-label=\"at symbol\">@</span>{\" \"}\r\n              <span aria-label=\"hashtag\">#</span>{\" \"}\r\n              <span aria-label=\"dollar sign\">$</span>{\" \"}\r\n              <span aria-label=\"percent\">%</span>\r\n            </p>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm_pwd\"\r\n              onChange={(e) => setMatchPwd(e.target.value)}\r\n              value={matchPwd}\r\n              placeholder=\" Confirm Password\"\r\n              required\r\n              aria-invalid={validMatch ? \"false\" : \"true\"}\r\n              aria-describedby=\"confirmnote\"\r\n              onFocus={() => setMatchFocus(true)}\r\n              onBlur={() => setMatchFocus(false)}\r\n            />\r\n            <label htmlFor=\"confirm_pwd\">\r\n              <FontAwesomeIcon\r\n                icon={faCheck}\r\n                className={validMatch && matchPwd ? \"valid\" : \"hide\"}\r\n              />\r\n              <FontAwesomeIcon\r\n                icon={faTimes}\r\n                className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}\r\n              />\r\n            </label>\r\n            <p\r\n              id=\"confirmnote\"\r\n              className={\r\n                matchFocus && !validMatch ? \"instructions\" : \"offscreen\"\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n              Must match the first password input field.\r\n            </p>\r\n            <br />\r\n            <button\r\n              className={\r\n                validName && validPwd && validMatch\r\n                  ? \"formButtonsOk\"\r\n                  : \"formButtons\"\r\n              }\r\n              disabled={!validName || !validPwd || !validMatch ? true : false}\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already registered?\r\n            <br />\r\n            <span className=\"line\">\r\n              <Link to={\"/login\"} className=\"text-blue-700\">\r\n                Sign In\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Api\\axios.jsx",[],[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\index.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\index.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Home.tsx",["132"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../Redux/Store\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  ALL_PRODUCTS,\r\n  PRODUCT_BY_ID,\r\n  allProducts,\r\n  productById,\r\n} from \"../Redux/ActionType/products\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Error from \"./Error/Error\";\r\nimport { USER_BY_USERNAME, userByUsername } from \"../Redux/ActionType/User\";\r\n\r\nconst Home = () => {\r\n  const user = useSelector((state: RootState) => state?.user?.user);\r\n  const products = useSelector(\r\n    (state: RootState) => state?.products?.AllProducts\r\n  );\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = async (e: any) => {\r\n    e.preventDefault();\r\n    let data = await allProducts(user.accessToken);\r\n    dispatch({\r\n      type: ALL_PRODUCTS,\r\n      payload: data,\r\n    });\r\n    navigate(\"/products\");\r\n  };\r\n\r\n  const handleClickSingleProduct = async (id: Number) => {\r\n    let data = await productById(id, user.accessToken);\r\n    dispatch({\r\n      type: PRODUCT_BY_ID,\r\n      payload: data,\r\n    });\r\n    navigate(`/product/${id}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let data = await allProducts(user.accessToken);\r\n      dispatch({\r\n        type: ALL_PRODUCTS,\r\n        payload: data,\r\n      });\r\n    })();\r\n    (async () => {\r\n      let data = await userByUsername(user.username, user.accessToken);\r\n      dispatch({\r\n        type: USER_BY_USERNAME,\r\n        payload: data,\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"h-full\">\r\n      <div className=\" h-60  py-5 text-center\">\r\n        <h2 className=\"text-6xl font-bold mb-3\">Discover all the offers</h2>\r\n        <h4 className=\"text-4xl font-semibold mb-5\">on the best products</h4>\r\n        <h3\r\n          className=\"text-4xl font-bold text-green-900 font-serif  underline \"\r\n          onClick={handleClick}\r\n          style={{\r\n            cursor: `pointer`,\r\n          }}\r\n        >\r\n          BE INSPIRED\r\n        </h3>\r\n      </div>\r\n\r\n      <p className=\"text-2xl font-semibold mt-5 mx-5\">Some categories...</p>\r\n      {user?.username ? (\r\n        <div className=\"flex justify-between mx-5 \">\r\n          <div className=\"w-1/3 mt-5 p-3 mb-5  flex flex-wrap justify-between bg-white shadow-md shadow-black rounded-md\">\r\n            <p className=\"text-xl font-medium w-full mb-3\">Eletronics:</p>\r\n            {products\r\n              ?.filter((product) => product?.category === \"ELECTRONICS\")\r\n              .slice(0, 4)\r\n              .map((product, i) => (\r\n                <div\r\n                  key={i}\r\n                  className=\"w-1/3 m-3\"\r\n                  onClick={() => handleClickSingleProduct(product?.id)}\r\n                  style={{\r\n                    cursor: `pointer`,\r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"h-24 shadow-md shadow-black rounded-md\"\r\n                    src={product.image}\r\n                    alt={product.name}\r\n                  />\r\n                  <p className=\"mt-2 font-playfair font-bold text-lg\">\r\n                    {product.name}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n          </div>\r\n\r\n          <div className=\"w-1/3 mt-5 p-3 mb-5 mx-3 flex flex-wrap justify-between  bg-white shadow-md shadow-black rounded-md\">\r\n            <p className=\"text-xl font-medium w-full mb-3\">Sport:</p>\r\n            {products\r\n              ?.filter((product) => product?.category === \"SPORT\")\r\n              .slice(0, 4)\r\n              .map((product, i) => (\r\n                <div\r\n                  key={i}\r\n                  className=\"w-1/3 m-3\"\r\n                  onClick={() => handleClickSingleProduct(product?.id)}\r\n                  style={{\r\n                    cursor: `pointer`,\r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"h-24 shadow-md shadow-black rounded-md\"\r\n                    src={product.image}\r\n                    alt={product.name}\r\n                  />\r\n                  <p className=\"mt-2 font-playfair font-bold text-lg\">\r\n                    {product.name}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div className=\"w-1/3 mt-5 p-3 mb-5  flex flex-wrap justify-between  bg-white shadow-md shadow-black rounded-md\">\r\n            <p className=\"text-xl font-medium w-full mb-3\">Books:</p>\r\n            {products\r\n              ?.filter((product) => product?.category === \"BOOKS\")\r\n              .slice(0, 4)\r\n              .map((product, i) => (\r\n                <div\r\n                  key={i}\r\n                  className=\"w-1/3 m-3\"\r\n                  onClick={() => handleClickSingleProduct(product?.id)}\r\n                  style={{\r\n                    cursor: `pointer`,\r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"h-24 shadow-md shadow-black rounded-md \"\r\n                    src={product.image}\r\n                    alt={product.name}\r\n                  />\r\n                  <p className=\"mt-2 font-playfair font-bold text-lg\">\r\n                    {product.name}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Error />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\User.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\User.ts",["133","134"],[],"import { userChange } from \"../Interfaces\";\r\n\r\nexport const ALL_USERS = \"ALL_USERS\";\r\nexport const USER_BY_ID = \"USER_BY_ID\";\r\nexport const USER_BY_USERNAME = \"USER_BY_USERNAME\";\r\n\r\nexport const fetchUsers = async (token: String) => {\r\n  try {\r\n    let res = await fetch(`http://localhost:8080/User/all`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    if (res.ok) {\r\n      let data = await res.json();\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< RICERCA USER PER ID >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\nexport const userById = async (value: Number | undefined, token: String) => {\r\n  try {\r\n    let res = await fetch(`http://localhost:8080/User/${value}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    if (res.ok) {\r\n      let data = await res.json();\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< RICERCA USER PER USERNAME>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\nexport const userByUsername = async (\r\n  value: String | undefined,\r\n  token: String\r\n) => {\r\n  try {\r\n    let res = await fetch(`http://localhost:8080/User/username/${value}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    if (res.ok) {\r\n      let data = await res.json();\r\n      return data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< MODIFICA USER >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nexport const changeMyProfileInfo = async (\r\n  params: userChange,\r\n  token: String\r\n) => {\r\n  const requestOptions = await fetch(`http://localhost:8080/User`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(params),\r\n  });\r\n};\r\nfunction RootState(a: unknown, b: unknown): boolean {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\Reducers\\products.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\Redux\\ActionType\\products.ts",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Products\\Product.tsx",["135","136","137"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../Redux/Store\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  PRODUCTS_BY_CATEGORY,\r\n  productsByCategory,\r\n} from \"../../Redux/ActionType/products\";\r\nimport position from \"../../icons8-position-50.png\";\r\n\r\nconst Product = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state: RootState) => state?.user.user);\r\n  const product = useSelector((state: RootState) => state?.products.product);\r\n\r\n  const maxQuantity = product.quantity;\r\n  const quantityOption = [];\r\n  for (let i = 0; i < maxQuantity; i++) {\r\n    quantityOption.push(i + 1);\r\n  }\r\n\r\n  const [todayDate, setTodayDate] = useState(new Date());\r\n\r\n  const formatTime = (time: string) => {\r\n    return time?.substring(0, 12);\r\n  };\r\n\r\n  const renderStars = (rating: number) => {\r\n    const filledStars = Math.floor(rating);\r\n    const emptyStars = 10 - filledStars;\r\n    const stars = [];\r\n    for (let i = 0; i < filledStars; i++) {\r\n      stars.push(\r\n        <svg\r\n          key={i}\r\n          className=\"w-4 h-4 text-yellow-300 mr-1 star-filled\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"currentColor\"\r\n          viewBox=\"0 0 22 20\"\r\n        >\r\n          <path d=\"M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z\" />\r\n        </svg>\r\n      );\r\n    }\r\n    for (let i = 0; i < emptyStars; i++) {\r\n      stars.push(\r\n        <svg\r\n          key={filledStars + i}\r\n          className=\"w-4 h-4 text-gray-300 dark:text-gray-500 mr-1 star-empty\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"currentColor\"\r\n          viewBox=\"0 0 22 20\"\r\n        >\r\n          <path d=\"M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z\" />\r\n        </svg>\r\n      );\r\n    }\r\n    return stars;\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let data = await productsByCategory(product.category, user.accessToken);\r\n      dispatch({\r\n        type: PRODUCTS_BY_CATEGORY,\r\n        payload: data,\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fiveDaysLater = new Date();\r\n    fiveDaysLater.setDate(todayDate.getDate() + 5);\r\n    setTodayDate(fiveDaysLater);\r\n  }, []);\r\n\r\n  const formatDateRange = (\r\n    startDate: {\r\n      getDate: () => any;\r\n      toLocaleString: (arg0: string, arg1: { month: string }) => any;\r\n    },\r\n    endDate: { getDate: () => any }\r\n  ) => {\r\n    const startDay = startDate.getDate();\r\n    const endDay = endDate.getDate();\r\n    const month = startDate.toLocaleString(\"default\", { month: \"long\" });\r\n    return `${startDay} - ${endDay} ${month}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex pt-10 justify-between mx-auto bg-white  h-screen\">\r\n      <div className=\"w-2/5 h-52 flex justify-center\">\r\n        <img src={product.image} alt={product.name} className=\"  w-96 h-96\" />\r\n      </div>\r\n\r\n      <div className=\" ml-8 mt-5 w-2/5 text-left\">\r\n        <div className=\"font-playfair font-bold text-3xl\">{product.name}</div>\r\n        <div className=\"font-serif font-medium text-xl mt-3\">\r\n          {product.description}\r\n        </div>\r\n        <div className=\"font-serif font-medium text-sm text-gray-500 mt-3 border-b-2 border-solid border-slate-500\">\r\n          Category:{\" \"}\r\n          {product.category[0].toUpperCase() +\r\n            product.category.slice(1).toLowerCase()}\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"text-2xl font-semibold my-5 \">Some reviews...</p>\r\n          {product.review.map((rev) => (\r\n            <article\r\n              key={rev.id}\r\n              className=\"border-b-2 border-solid border-slate-500\"\r\n            >\r\n              <div className=\"flex items-center mb-4 space-x-4\">\r\n                <img\r\n                  className=\"w-10 h-10 rounded-full mt-5\"\r\n                  src={rev.user.image}\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"space-y-1 font-medium dark:text-white\">\r\n                  <p>\r\n                    {rev.user.name}{\" \"}\r\n                    <span className=\"block text-xs text-gray-500 dark:text-gray-400\">\r\n                      {formatTime(rev?.published?.toString())}\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center mb-1\">\r\n                {renderStars(rev?.valutation)}\r\n              </div>\r\n\r\n              <p className=\"mb-2 text-gray-500 dark:text-gray-400\"></p>\r\n              <p className=\"mb-2 text-gray-500 dark:text-gray-400\">\r\n                {rev.comment}\r\n              </p>\r\n\r\n              <a\r\n                href=\"#\"\r\n                className=\"block mb-5 text-sm font-medium text-blue-600 hover:underline dark:text-blue-500\"\r\n              >\r\n                Read more\r\n              </a>\r\n            </article>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"m-5 pl-5 pt-3 font-serif shadow-sm shadow-slate-500 rounded-md w-1/5 mt-8\"\r\n        style={{ border: \"1px solid grey\" }}\r\n      >\r\n        <span>\r\n          <p> Nuovo</p>\r\n          <p>{product.price}€</p>\r\n        </span>\r\n        <p className=\"mt-4 text-sm\">Consegna senza costi aggiuntivi</p>\r\n        <p className=\"text-xs mt-2\">\r\n          {formatDateRange(\r\n            todayDate,\r\n            new Date(todayDate.getTime() + 4 * 24 * 60 * 60 * 1000)\r\n          )}\r\n        </p>\r\n        <p className=\"mt-5\">\r\n          <img src={position} alt=\"position\" className=\"h-6\" />\r\n        </p>\r\n        <p className=\"mt-5 mb-2 text-xl text-green-700\">\r\n          Disponibilità immediata\r\n        </p>\r\n        <span>\r\n          Quantità:\r\n          <select\r\n            name=\"quantity\"\r\n            autoComplete=\"off\"\r\n            id=\"quantity\"\r\n            tabIndex={0}\r\n            className=\"border-2 border-solid border-black ml-3 rounded-md\"\r\n          >\r\n            {quantityOption.map((quantity) => (\r\n              <option key={quantity} value=\"quantity\">\r\n                {quantity}\r\n              </option>\r\n            ))}\r\n          </select>{\" \"}\r\n        </span>\r\n        <div className=\"flex justify-center mt-10\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"text-white h-10 w-40 bg-orange-500 hover:bg-orange-800 focus:outline-none focus:ring-4 focus:ring-orange-300 font-medium rounded-full text-sm  text-center mr-2 mb-2 dark:bg-orange-600 dark:hover:bg-orange-700 dark:focus:ring-orange-900\"\r\n          >\r\n            Aggiungi al carrello\r\n          </button>\r\n        </div>\r\n        <div className=\"flex justify-center mt-5\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"text-white h-10 w-40 bg-orange-600 hover:bg-orange-800 focus:outline-none focus:ring-4 focus:ring-orange-300 font-medium rounded-full text-sm  text-center mr-2 mb-2 dark:bg-orange-600 dark:hover:bg-orange-700 dark:focus:ring-orange-900\"\r\n          >\r\n            Acquista ora\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Product;\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Products\\Products.tsx",["138","139","140","141"],[],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  ALL_PRODUCTS,\r\n  PRODUCT_BY_ID,\r\n  allProducts,\r\n  productById,\r\n} from \"../../Redux/ActionType/products\";\r\nimport { RootState } from \"../../Redux/Store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Products = () => {\r\n  const user = useSelector((state: RootState) => state?.user.user);\r\n  const products = useSelector(\r\n    (state: RootState) => state?.products?.AllProducts\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = async (id: Number) => {\r\n    let data = await productById(id, user.accessToken);\r\n    dispatch({\r\n      type: PRODUCT_BY_ID,\r\n      payload: data,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let data = await allProducts(user.accessToken);\r\n      dispatch({\r\n        type: ALL_PRODUCTS,\r\n        payload: data,\r\n      });\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className=\" mt-5\">\r\n      {\" \"}\r\n      <p className=\"text-left text-2xl ml-24 font-bold text-black\">Results</p>\r\n      <p className=\"text-left text-xl ml-24 text-black\">\r\n        Check out these results.\r\n      </p>\r\n      <div className=\"flex justify-center flex-wrap my-5\">\r\n        {products\r\n          .slice(0, 15)\r\n          .reverse()\r\n          .map((product, i) => (\r\n            <div\r\n              key={i}\r\n              className=\"w-1/4 ss:w-1/2 xs:w-full  m-1 max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700\"\r\n            >\r\n              <Link\r\n                to={`/product/${product.id}`}\r\n                onClick={() => handleClick(product?.id)}\r\n              >\r\n                <img\r\n                  className=\"p-8 rounded-t-lg h-72 w-full\"\r\n                  src={product.image}\r\n                  alt=\"product image\"\r\n                />\r\n              </Link>\r\n\r\n              <div className=\"px-5 pb-5\">\r\n                <Link to={`/product/${product.id}`}>\r\n                  <h5 className=\"text-xl font-semibold tracking-tight text-gray-900 dark:text-white\">\r\n                    {product.name}\r\n                  </h5>\r\n                </Link>\r\n                <div className=\"flex items-center mt-2.5 mb-5\">\r\n                  <span className=\"bg-blue-100 text-blue-800 text-xs font-semibold  px-2.5 py-0.5 rounded dark:bg-blue-200 dark:text-blue-800 ml-3\">\r\n                    {product.description}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n                    ${product.price}\r\n                  </span>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n                  >\r\n                    Add to cart\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Error\\Error.tsx",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Profile\\Dashboard.tsx",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Profile\\Addresses.tsx",[],[],"C:\\Users\\bebom\\eclipse-workspace\\eCommerce\\frontend\\src\\components\\Profile\\NewAddress.tsx",[],[],{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"146","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":26},{"ruleId":"142","severity":1,"message":"147","line":7,"column":28,"nodeType":"144","messageId":"145","endLine":7,"endColumn":42},{"ruleId":"148","severity":1,"message":"149","line":112,"column":17,"nodeType":"150","endLine":116,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":148,"column":23,"nodeType":"150","endLine":151,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":156,"column":23,"nodeType":"150","endLine":159,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":165,"column":23,"nodeType":"150","endLine":171,"endColumn":24},{"ruleId":"142","severity":1,"message":"153","line":202,"column":10,"nodeType":"144","messageId":"145","endLine":202,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":36,"column":6,"nodeType":"156","endLine":36,"endColumn":15,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":13,"column":27,"nodeType":"160","messageId":"161","endLine":13,"endColumn":28,"suggestions":"162"},{"ruleId":"154","severity":1,"message":"163","line":56,"column":6,"nodeType":"156","endLine":56,"endColumn":8,"suggestions":"164"},{"ruleId":"142","severity":1,"message":"165","line":69,"column":9,"nodeType":"144","messageId":"145","endLine":69,"endColumn":23},{"ruleId":"142","severity":1,"message":"166","line":78,"column":10,"nodeType":"144","messageId":"145","endLine":78,"endColumn":19},{"ruleId":"154","severity":1,"message":"167","line":70,"column":6,"nodeType":"156","endLine":70,"endColumn":8,"suggestions":"168"},{"ruleId":"154","severity":1,"message":"169","line":76,"column":6,"nodeType":"156","endLine":76,"endColumn":8,"suggestions":"170"},{"ruleId":"151","severity":1,"message":"152","line":139,"column":15,"nodeType":"150","endLine":142,"endColumn":16},{"ruleId":"142","severity":1,"message":"171","line":1,"column":21,"nodeType":"144","messageId":"145","endLine":1,"endColumn":29},{"ruleId":"154","severity":1,"message":"172","line":35,"column":6,"nodeType":"156","endLine":35,"endColumn":8,"suggestions":"173"},{"ruleId":"148","severity":1,"message":"149","line":56,"column":17,"nodeType":"150","endLine":60,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":78,"column":19,"nodeType":"150","endLine":81,"endColumn":20},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'USER_BY_USERNAME' is defined but never used.","'userByUsername' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'dispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["174"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["175","176"],"React Hook useEffect has missing dependencies: 'dispatch', 'user.accessToken', and 'user.username'. Either include them or remove the dependency array.",["177"],"'requestOptions' is assigned a value but never used.","'RootState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'product.category', and 'user.accessToken'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has a missing dependency: 'todayDate'. Either include it or remove the dependency array.",["179"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user.accessToken'. Either include them or remove the dependency array.",["180"],{"desc":"181","fix":"182"},{"messageId":"183","fix":"184","desc":"185"},{"messageId":"186","fix":"187","desc":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [navigate, success]",{"range":"197","text":"198"},"removeEscape",{"range":"199","text":"200"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"201","text":"202"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [dispatch, user.accessToken, user.username]",{"range":"203","text":"204"},"Update the dependencies array to be: [dispatch, product.category, user.accessToken]",{"range":"205","text":"206"},"Update the dependencies array to be: [todayDate]",{"range":"207","text":"208"},"Update the dependencies array to be: [dispatch, user.accessToken]",{"range":"209","text":"210"},[1421,1430],"[navigate, success]",[417,418],"",[417,417],"\\",[1527,1529],"[dispatch, user.accessToken, user.username]",[2595,2597],"[dispatch, product.category, user.accessToken]",[2755,2757],"[todayDate]",[923,925],"[dispatch, user.accessToken]"]